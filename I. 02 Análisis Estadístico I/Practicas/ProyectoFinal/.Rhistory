par(mar=c(5,15,4,24))
barplot(table(exportaciones$Pais),  horiz=T , las=1, main="Pais Destino", col="#69b3a2")
par(mar=c(5,15,4,4))
barplot(table(exportaciones$Pais),  horiz=T , las=1, main="Pais Destino", col="#69b3a2")
barplot(table(exportaciones$`Departamento`),main="Departamento exportador")
barplot(table(exportaciones$Departamento),  horiz=T , las=1, main="Departamento", col="#69b3a2")
barplot(table(exportaciones$Departamento),  horiz=T , las=1, main="Departamento", col="light blue")
totalesPorTipo <- aggregate(Aprobadas ~ Tipo, data = exportaciones, sum)
nombres=totalesPorTipo$Tipo
etiquetas = paste(nombres, " (", pct, "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
totalesPorTipo <- aggregate(Aprobadas ~ Tipo, data = exportaciones, sum)
nombres=totalesPorTipo$Tipo
etiquetas = paste(nombres, " (", pct, "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
install.packages("modeest")
install.packages("modeest")
install.packages("readxl")
install.packages("readxl")
library("readxl")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
install.packages("GGally")
library(GGally)
pacman::p_load(pacman,party,rio,tidyverse)
install.packages("modeest")
install.packages("modeest")
library(modeest)
exportaciones<-read_excel("exportaciones.xlsx")  %>% as_tibble()
head(exportaciones)
indices<-read_excel("indices.xlsx")  %>% as_tibble()
head(indices)
# Histogramas
ggplot(exportaciones,aes(x=Solicitudes, fill=Tipo, alpha=1))+geom_histogram(bins = 100)
miHistograma = function(x, de, a, pasos ){hist(x, breaks = seq(from=de, to=a, by=pasos))}
miHistograma(exportaciones$Solicitudes,0,400,20)
miHistograma(exportaciones$Aprobadas,0,100,5)
miHistograma(indices$`IndiceAgricolas`,160,190,5)
miHistograma(indices$`IndiceMinerales`,130,160,5)
miHistograma(indices$`IndiceCombustibles`,90,140,5)
miHistograma(indices$`IndiceTotal`,110,150,5)
###### Barras
barplot(table(exportaciones$`Tipo`),main="Tipo")
par(mar=c(5,15,4,4))
barplot(table(exportaciones$Pais),  horiz=T , las=1, main="Pais Destino", col="#69b3a2")
barplot(table(exportaciones$Departamento),  horiz=T , las=1, main="Departamento", col="light blue")
totalesPorTipo <- aggregate(Aprobadas ~ Tipo, data = exportaciones, sum)
nombres=totalesPorTipo$Tipo
etiquetas = paste(nombres, " (", pct, "%)", sep = "")
etiquetas = paste(nombres, " (", pct, "%)", sep = "")
totalesPorTipo
nombres
etiquetas = paste(nombres)
#etiquetas = paste(nombres, " (", pct, "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
install.packages("pct")
library(pct)
#etiquetas = paste(nombres)
etiquetas = paste(nombres, " (", pct, "%)", sep = "")
pct?
library(pct)
#etiquetas = paste(nombres)
etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
etiquetas = paste(nombres)
#etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
etiquetas = paste(nombres)
#etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
# Boxplot
miBoxplot = function(bd,color, x){
p <- ggplot(bd,aes(color,x))
p +  geom_boxplot(aes(fill=color))   }
boxplot(exportaciones$Aprobadas)
miBoxplot(exportaciones,exportaciones$Tipo,exportaciones$Aprobadas)
miBoxplot(exportaciones,exportaciones$Tipo,exportaciones$Aprobadas)
############  Estadísticos
medidas = function(x){
Medida<-c("Media","Mediana","Moda","Cuartil 25", "Cuartil 75","IQR", "Coef. de variación")
Valor <-c(mean(x), median(x),mfv1(x),quantile(x, p=c(.25, .75)),IQR(x),sd(x)/mean(x))
tabla = data.frame(Medida,Valor)
tabla }
medidas(exportaciones$Solicitudes)
medidas(exportaciones$Aprobadas)
asociacion = function(x,y){
Medida<-c("Covarianza","Coef. de Correlación")
Valor<-c(cov(x, y), cor(x,y))
tabla = data.frame(Medida,Valor)
tabla}
asociacion(exportaciones$Solicitudes,exportaciones$Aprobadas)
### scatter
ggpairs(exportaciones,
columns=c("nombre"))
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "sfsadf", ylab = "wyyyyyyy", main = "sttttt")
### scatter
ggpairs(exportaciones,
columns=c("nombre"))
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "sfsadf", ylab = "wyyyyyyy", main = "sttttt")
recta = lm(exportaciones$Aprobadas ~ exportaciones$Solicitudes)
abline(recta, col = "darkgreen", lwd = 2)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
exportaciones<-read_excel("exportaciones.xlsx")  %>% as_tibble()
head(exportaciones)
indices<-read_excel("indices.xlsx")  %>% as_tibble()
head(indices)
# Histogramas
ggplot(exportaciones,aes(x=Solicitudes, fill=Tipo, alpha=1))+geom_histogram(bins = 100)
miHistograma = function(x, de, a, pasos ){hist(x, breaks = seq(from=de, to=a, by=pasos))}
miHistograma(exportaciones$Solicitudes,0,400,20)
miHistograma(exportaciones$Aprobadas,0,100,5)
miHistograma(indices$`IndiceAgricolas`,160,190,5)
miHistograma(indices$`IndiceMinerales`,130,160,5)
miHistograma(indices$`IndiceCombustibles`,90,140,5)
miHistograma(indices$`IndiceTotal`,110,150,5)
###### Barras
barplot(table(exportaciones$`Tipo`),main="Tipo")
par(mar=c(5,15,4,4))
barplot(table(exportaciones$Pais),  horiz=T , las=1, main="Pais Destino", col="#69b3a2")
barplot(table(exportaciones$Departamento),  horiz=T , las=1, main="Departamento", col="light blue")
totalesPorTipo <- aggregate(Aprobadas ~ Tipo, data = exportaciones, sum)
nombres=totalesPorTipo$Tipo
nombres
etiquetas = paste(nombres)
#etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
# Boxplot
miBoxplot = function(bd,color, x){
p <- ggplot(bd,aes(color,x))
p +  geom_boxplot(aes(fill=color))   }
boxplot(exportaciones$Aprobadas)
miBoxplot(exportaciones,exportaciones$Tipo,exportaciones$Aprobadas)
############  Estadísticos
medidas = function(x){
Medida<-c("Media","Mediana","Moda","Cuartil 25", "Cuartil 75","IQR", "Coef. de variación")
Valor <-c(mean(x), median(x),mfv1(x),quantile(x, p=c(.25, .75)),IQR(x),sd(x)/mean(x))
tabla = data.frame(Medida,Valor)
tabla }
medidas(exportaciones$Solicitudes)
medidas(exportaciones$Aprobadas)
asociacion = function(x,y){
Medida<-c("Covarianza","Coef. de Correlación")
Valor<-c(cov(x, y), cor(x,y))
tabla = data.frame(Medida,Valor)
tabla}
asociacion(exportaciones$Solicitudes,exportaciones$Aprobadas)
### scatter
ggpairs(exportaciones,
columns=c("nombre"))
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "sfsadf", ylab = "wyyyyyyy", main = "sttttt")
recta = lm(exportaciones$Aprobadas ~ exportaciones$Solicitudes)
abline(recta, col = "darkgreen", lwd = 2)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Departamento)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
asociacion = function(x,y){
Medida<-c("Covarianza","Coef. de Correlación")
Valor<-c(cov(x, y), cor(x,y))
tabla = data.frame(Medida,Valor)
tabla}
asociacion(exportaciones$Solicitudes,exportaciones$Aprobadas)
### scatter
ggpairs(exportaciones,
columns=c("nombre"))
# Histogramas
ggplot(exportaciones,aes(x=Solicitudes, fill=Tipo, alpha=1))+geom_histogram(bins = 100)
miHistograma = function(x, de, a, pasos ){hist(x, breaks = seq(from=de, to=a, by=pasos))}
miHistograma(exportaciones$Solicitudes,0,400,20)
miHistograma(exportaciones$Aprobadas,0,100,5)
miHistograma(exportaciones$Solicitudes,0,400,20)
miHistograma(exportaciones$Aprobadas,0,100,5)
miHistograma(indices$`IndiceAgricolas`,160,190,5)
miHistograma(indices$`IndiceTotal`,110,150,5)
###### Barras
barplot(table(exportaciones$`Tipo`),main="Tipo")
par(mar=c(5,15,4,4))
barplot(table(exportaciones$Pais),  horiz=T , las=1, main="Pais Destino", col="#69b3a2")
barplot(table(exportaciones$Departamento),  horiz=T , las=1, main="Departamento", col="light blue")
totalesPorTipo <- aggregate(Aprobadas ~ Tipo, data = exportaciones, sum)
nombres=totalesPorTipo$Tipo
nombres
etiquetas = paste(nombres)
#etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
# Boxplot
miBoxplot = function(bd,color, x){
p <- ggplot(bd,aes(color,x))
p +  geom_boxplot(aes(fill=color))   }
boxplot(exportaciones$Aprobadas)
miBoxplot(exportaciones,exportaciones$Tipo,exportaciones$Aprobadas)
p
p
#etiquetas = paste(nombres, " (", pct(Aprobadas), "%)", sep = "")
pie(totalesPorTipo$Aprobadas, col = terrain.colors(4),labels = etiquetas)
# Boxplot
miBoxplot = function(bd,color, x){
p <- ggplot(bd,aes(color,x))
p +  geom_boxplot(aes(fill=color))   }
boxplot(exportaciones$Aprobadas)
miBoxplot(exportaciones,exportaciones$Tipo,exportaciones$Aprobadas)
############  Estadísticos
medidas = function(x){
Medida<-c("Media","Mediana","Moda","Cuartil 25", "Cuartil 75","IQR", "Coef. de variación")
Valor <-c(mean(x), median(x),mfv1(x),quantile(x, p=c(.25, .75)),IQR(x),sd(x)/mean(x))
tabla = data.frame(Medida,Valor)
tabla }
medidas(exportaciones$Solicitudes)
medidas(exportaciones$Aprobadas)
asociacion = function(x,y){
Medida<-c("Covarianza","Coef. de Correlación")
Valor<-c(cov(x, y), cor(x,y))
tabla = data.frame(Medida,Valor)
tabla}
asociacion(exportaciones$Solicitudes,exportaciones$Aprobadas)
### scatter
ggpairs(exportaciones,
columns=c("nombre"))
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "sfsadf", ylab = "wyyyyyyy", main = "sttttt")
recta = lm(exportaciones$Aprobadas ~ exportaciones$Solicitudes)
abline(recta, col = "darkgreen", lwd = 2)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Departamento)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "sfsadf", ylab = "wyyyyyyy", main = "sttttt")
recta = lm(exportaciones$Aprobadas ~ exportaciones$Solicitudes)
abline(recta, col = "darkgreen", lwd = 2)
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "Trámites", ylab = "wyyyyyyy", main = "sttttt")
plot(exportaciones$Solicitudes,exportaciones$Aprobadas, xlab = "Trámites", ylab = "Efectivas", main = "Correlaciónttt")
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Departamento)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Tipo)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Departamento)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
### scatter colores
ggplot(exportaciones, aes(x=Solicitudes, y=Aprobadas, color=Departamento)) +
geom_point(size=2,alpha=.3) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)#+ylim(0,100)+xlim(0,100)
###############
media<-mean(exportaciones$Solicitudes)
n<-length(exportaciones$Solicitudes)
desv<-sd(exportaciones$Solicitudes)
NConfianza<-c(0.95)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
######      Aprobaciones   #########
media<-mean(exportaciones$Aprobaciones)
######      Aprobaciones   #########
media<-mean(exportaciones$Aprobaciones)
######      Solicitudes   #########
media<-mean(exportaciones$Solicitudes)
######      Aprobaciones   #########
media<-mean(exportaciones$Aprobadas)
n<-length(exportaciones$Aprobadas)
desv<-sd(exportaciones$Aprobadas)
NConfianza<-c(0.95)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
media<-mean(exportaciones$Solicitudes)
n<-length(exportaciones$Solicitudes)
desv<-sd(exportaciones$Solicitudes)
NConfianza<-c(0.99)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
media<-mean(exportaciones$Aprobadas)
n<-length(exportaciones$Aprobadas)
desv<-sd(exportaciones$Aprobadas)
NConfianza<-c(0.99)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
######      Solicitudes   #########
normales<-function(campo,confianza){
media<-mean(campo)
n<-length(campo)
desv<-sd(campo)
NConfianza<-c(confianza)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
}
normales(exportaciones$Solicitudes,0.99)
normales(exportaciones$Aprobadas,0.99)
######      Aprobaciones   #########
media<-mean(exportaciones$Aprobadas)
n<-length(exportaciones$Aprobadas)
desv<-sd(exportaciones$Aprobadas)
NConfianza<-c(0.99)
Z<-qnorm((1-NConfianza)/2,lower.tail = FALSE)
error.est <- desv/sqrt(n)
margen.error <- Z * error.est
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#hipotesis
intervalos<-function(nombre,campo,ene,media,desv){
media<-mean(campo)
ene<-length(campo)
desv<-sd(campo)
error.est <- desv/sqrt(ene)
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos("Solicitudes",exportaciones$Solicitudes)
install.packages("BSDA")
library(BSDA)
install.packages("BSDA")
library(BSDA)
intervalos("Solicitudes",exportaciones$Solicitudes)
#hipotesis
intervalos<-function(nombre,campo,ene,media,desv){
media<-mean(campo)
ene<-length(campo)
desv<-sd(campo)
error.est <- desv/sqrt(ene)
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error
lim.sup <- media + margen.error
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#  zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos("Solicitudes",exportaciones$Solicitudes)
#Ejemplo1
contenido <- c(502, 501, 497, 491, 496, 501, 502, 500, 489, 490)
install.packages("nortest")
library(nortest)
ad.test(contenido)
t.test(contenido, alternative='two.sided',
conf.level=0.95, mu=500)
xbarra <- 19500 # Datos del problema
desvia <- 3900 # Datos del problema
n <- 100 # Datos del problema
mu <- 20000 # Media de referencia
est <- (xbarra - mu) / (desvia / sqrt(n))
est # Para obtener el valor del estadístico
pnorm(est) # Para obtener el valor-P
#Prueba de hipótesis para la proporción P
#Ejemplo3
z <- (174/200 - 0.90) / sqrt(0.90 * (1 - 0.90) / 200)
z # Para obtener el valor del estadístico
pnorm(q=z, lower.tail=TRUE) # Para obtener el valor-P
#Prueba ?^2 de Pearson
#Ejemplo4
prop.test(x=174, n=200, p=0.9, alternative='less',
conf.level=0.95, correct=FALSE)
binom.test(x=17, n=20, p=0.9, alternative="less")
paired=TRUE, conf.level=0.95)
t.test(contenido, alternative='two.sided',
conf.level=0.95, mu=500)
xbarra <- 19500 # Datos del problema
desvia <- 3900 # Datos del problema
n <- 100 # Datos del problema
mu <- 20000 # Media de referencia
est <- (xbarra - mu) / (desvia / sqrt(n))
est # Para obtener el valor del estadístico
pnorm(est) # Para obtener el valor-P
####### Hipotesis ##########
t.test(contenido, alternative='two.sided',
conf.level=0.95, mu=500)
hipotesis<-function(campo,LaMedia){
mediamuestral <- media<-mean(campo)
desvia <- desv<-sd(campo)
muestra <- n<-length(campo)
media <- LaMedia # Media de referencia
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
estadistico # Para obtener el valor del estadístico
pnorm(estadistico) # Para obtener el valor-P
}
summarise(exportaciones$Solicitudes)
summary(exportaciones$Solicitudes)
hipotesis(exportaciones$Solicitudes,120)
hipotesis(exportaciones$Solicitudes,100)
hipotesis(exportaciones$Solicitudes,150)
hipotesis(exportaciones$Solicitudes,120)
hipotesis(exportaciones$Solicitudes,130)
summary(exportaciones$Aprobadas)
hipotesis(exportaciones$Aprobadas,20)
hipotesis<-function(campo,LaMedia){
mediamuestral <- media<-mean(campo)
desvia <- desv<-sd(campo)
muestra <- n<-length(campo)
media <- LaMedia # Media de referencia
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
#estadistico # Para obtener el valor del estadístico
pnorm(estadistico) # Para obtener el valor-P
}
summary(exportaciones$Aprobadas)
hipotesis(exportaciones$Aprobadas,20)
install.packages("modeest")
install.packages("modeest")
install.packages("nortest")
library(nortest)
install.packages("nortest", dependencies = TRUE, INSTALL_opts = '--no-lock')
library(nortest)
install.packages("pct", dependencies = TRUE, INSTALL_opts = '--no-lock')
library(pct)
### hipotesis ######
hipotesis<-function(campo,LaMedia){
mediamuestral <- 3.4
desvia <- 0,02
muestra <- 40
media <- 4.1
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
pnorm(estadistico)
}
### hipotesis ######
hipotesis<-function(campo,LaMedia){
mediamuestral <- 3.4
desvia <- 0.02
muestra <- 40
media <- 4.1
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
pnorm(estadistico)
}
mediamuestral <- 3.4
desvia <- 0.02
muestra <- 40
media <- 4.1
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
pnorm(estadistico)
mediamuestral <- 3.4
desvia <- 0.02
muestra <- 40
media <- 4.1
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
estadistico
pnorm(estadistico)
mediamuestral <- 0.034
desvia <- 0.02
muestra <- 40
media <- 0.041
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
estadistico
pnorm(estadistico)
estadistico
2*pnorm(estadistico)
####### Hipotesis ##########
t.test(contenido, alternative='two.sided',
conf.level=0.95, mu=500)
hipotesis<-function(campo,LaMedia){
mediamuestral <- media<-mean(campo)
desvia <- desv<-sd(campo)
muestra <- n<-length(campo)
media <- LaMedia
estadistico <- (mediamuestral - media) / (desvia / sqrt(muestra))
pnorm(estadistico)
}
summary(exportaciones$Aprobadas)
summary(exportaciones$Solicitudes)
hipotesis(exportaciones$Solicitudes,120)
hipotesis(exportaciones$Solicitudes,130)
summary(exportaciones$Aprobadas)
hipotesis(exportaciones$Aprobadas,20)
hipotesis(exportaciones$Aprobadas,25)
hipotesis(exportaciones$Aprobadas,22)
####### Indice ##########
indices
