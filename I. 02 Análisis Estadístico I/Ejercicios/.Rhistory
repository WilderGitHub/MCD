geom_smooth() +
p1 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="none") +
labs(title="legend.position='none'")
p1
#Leyenda arriba:
p2 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="top") +
labs(title="legend.position='top'")
p2
#Leyenda dentro del gráfico:
ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
labs(title="legend.position='coords inside plot'") +
theme(legend.justification=c(1,0), legend.position=c(1,0))
######   3 ##########
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black")
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black",binwidth=1000)
ggplot(diamonds,aes(x=price)) +
geom_histogram(aes(y = (..count..)/sum(..count..)),
fill="white",
color="black",
binwidth=1000)
p <- ggplot(diamonds,aes(cut,price))
p +
geom_boxplot(aes(fill=cut))
#Ejemplo () sin añadir ningun grafico
diamonds
str (diamonds)
ggplot(diamonds) +
geom_point(aes(x=carat, y=price, color=cut)) +
geom_smooth(aes(x=carat, y=price, color=cut))
ggplot(diamonds) +
geom_point(aes(x=carat, y=price, color=cut)) +
geom_smooth(aes(x=carat, y=price))
## o mas sencilo
ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(diamonds, aes(x=carat, y=price, color=cut, shape=color)) +
geom_point()
gg <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
labs(title="Diagrama de puntos", x="Tamaño del diamante", y="Precio")
gg
gg1 <- gg +
theme(plot.title=element_text(size=30, face="bold"),
axis.text.x=element_text(size=15),
axis.text.y=element_text(size=15),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20)) +
scale_color_discrete(name="Corte del diamante")
gg1 +
facet_wrap( ~ cut, ncol=3)
gg1 +
facet_wrap(color ~ cut)
gg1 +
facet_wrap(color ~ cut, scales="free")
p1 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="none") +
labs(title="legend.position='none'")
p1
#Leyenda arriba:
p2 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="top") +
labs(title="legend.position='top'")
p2
#Leyenda dentro del gráfico:
ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
labs(title="legend.position='coords inside plot'") +
theme(legend.justification=c(1,0), legend.position=c(1,0))
######   3 ##########
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black")
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black",binwidth=1000)
ggplot(diamonds,aes(x=price)) +
geom_histogram(aes(y = (..count..)/sum(..count..)),
fill="white",
color="black",
binwidth=1000)
p <- ggplot(diamonds,aes(cut,price))
p +
geom_boxplot(aes(fill=cut))
p +
geom_boxplot(aes(fill=cut))+
geom_point()
p +
geom_boxplot(aes(fill=factor(color)))
p +
geom_boxplot(aes(fill=factor(color)),
outlier.colour = "red",
outlier.size = 1.5)
p <- ggplot(diamonds,aes(cut,price))
p +
geom_boxplot(aes(fill=cut))
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`EPS Rating`))
p +
geom_boxplot(aes(fill=`Sales/Margins/ROE`))
summary(ibd)
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`PE Ratio`))
p +
geom_boxplot(aes(fill=`Sales/Margins/ROE`))
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
setwd("C:/Users/wilde/Desktop/MCD/I. 02 Análisis Estadístico I/Practicas/Practica1")
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
library("readxl")
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
library(ggplot2)
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`PE Ratio`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
migrafico+facet_wrap( ~ `Sales/Margins/ROE`, ncol=3)
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`PE Ratio`))
p +  geom_boxplot(aes(fill=`Sales/Margins/ROE`))
summary(ibd)
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`PE Ratio`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
migrafico+facet_wrap( ~ `Sales/Margins/ROE`, ncol=3)
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`PE Ratio`))
p +  geom_boxplot(aes(fill=`Sales/Margins/ROE`))
cbind( Freq=table(ibd), Cumul=cumsum(table(ibd)), relative=prop.table(table(ibd)))
install.packages("readxl")
library("readxl")
# para archivos con extensión xls
misDatos <- read_excel ("IBD.xls", sheet= "Data")
View(misDatos)
View(misDatos)
# Método 2. Utilizando una librería denominada “readxl”
install.packages("xlsx")
library("xlsx")
Datos<-read.xlsx("IBD.xls", 1, header=TRUE)
View(Datos)
View(Datos)
View(misDatos)
misDatos
# •	Para importar datos con extensión .csv
presidentes<-read.xlsx("presidents.csv")
# •	Para importar datos con extensión .csv
presidentes<-read.csv("presidents.csv")
View(presidentes)
# •	Para importar datos con extensión .csv
library(readr)
presidentes<-read.csv("presidents.csv")
View(presidentes)
# •	Para importar datos con extensión .txt
read.tabl("consumo.txt", header = TRUE, sep = "", dec = ".")
# •	Para importar datos con extensión .txt
consumo<-read.table("consumo.txt", header = TRUE, sep = "", dec = ".")
View(consumo)
library("readxl")
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`PE Ratio`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
library(ggplot2)
install.packages("readxl")
install.packages("readxl")
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`PE Ratio`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
migrafico+facet_wrap( ~ `Sales/Margins/ROE`, ncol=3)
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`PE Ratio`))
p +  geom_boxplot(aes(fill=`Sales/Margins/ROE`))
summary(ibd)
install.packages("ggplot2")
library(ggplot2)
install.packages("readxl")
library("readxl")
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating" y el color esta dado por "Sales/Margins/ROE"
ggplot(ibd,aes(x=`EPS Rating`, fill=`Sales/Margins/ROE`))+geom_histogram(bins = 11)
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`PE Ratio`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
# Grafico"
migrafico<-ggplot(ibd, aes(x=`EPS Rating`, y=`Relative Price Strength`, color=`Sales/Margins/ROE`)) +
geom_point(size=5) +
#  geom_smooth()+
labs(title="Diagrama de puntos", x="Calificación EPS", y="Razón precio-beneficio")
migrafico
migrafico+facet_wrap( ~ `Sales/Margins/ROE`, ncol=3)
# Boxplot
p <- ggplot(ibd,aes(`Sales/Margins/ROE`,`PE Ratio`))
p +  geom_boxplot(aes(fill=`Sales/Margins/ROE`))
summary(ibd)
#La moda
install.packages("modeest")
mfv(ibd$`EPS Rating`)
mfv(`EPS Rating`)
library(modeest)
mfv(`EPS Rating`)
mfv(ibd$`EPS Rating`)
mfv1(ibd$`EPS Rating`)
ibd
View(ibd)
# Cuartiles
quantile(ibd[[`EPS Rating`]], p=c(.05, .25, .5, .75, .95))
# Cuartiles
quantile(ibd$`EPS Rating`, p=c(.05, .25, .5, .75, .95))
# Cuartiles
quantile(ibd$`EPS Rating`, p=c(.25, .5, .75))
# RIQ
IQR(ibd$`EPS Rating`)
### Tabla de frecuencias
breaks <- seq(from=min(ibd$`EPS Rating`),
to=max(ibd$`EPS Rating`), length=11)
pop_freq <- cut(ibd$`EPS Rating`, breaks=breaks,
right=TRUE, include.lowest=TRUE)
table(pop_freq)
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
### Tabla de frecuencias
breaks <- seq(from=min(ibd$`EPS Rating`),
to=max(ibd$`EPS Rating`), length=10)
pop_freq <- cut(ibd$`EPS Rating`, breaks=breaks,
right=TRUE, include.lowest=TRUE)
table(pop_freq)
breaks <- seq(from=min(0),
to=max(100), length=10)
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`,, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
#hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
hist(ibd$`EPS Rating`, freq=FALSE)
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=1, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=1, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=1, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=1, by=10))
#  importamos la base de datos
ibd <- read_excel("IBD.xls", sheet = "Data")
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=1, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, freq=TRUE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
#hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
hist(ibd$`Relative Price Strength`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`PE Ratio`, breaks = seq(from=0, to=60, by=10))
# Histograma de la variable "EPS Rating"
hist(ibd$`EPS Rating`, breaks = seq(from=0, to=100, by=10))
hist(ibd$`EPS Rating`, freq=FALSE, breaks = seq(from=0, to=100, by=10))
lines(density(ibd$`EPS Rating`), lwd=3, col='blue')
sd(variable, na.rm=na.rm) / mean(variable, na.rm=na.rm)
# Coeficiente de variación
coeficienteVariacion <- function(variable, na.rm = FALSE) {
sd(variable, na.rm=na.rm) / mean(variable, na.rm=na.rm)
}
# Coeficiente de variación
coeficienteVariacion <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)
}
coeficienteVariacion(x=ibd$`EPS Rating`, na.rm=T)
##ESTADISTICA DESCRIPTIVA
##Para leer este archivo con R utilizaremos los siguientes comandos:
##para importar archivos con extension csv
install.packages("readr")
library(readr)
sargos = read.table(file = "sargos.csv", sep = ";", dec = ",",header = TRUE)
sargos
setwd("C:/Users/rserdan/Desktop/MCD/I. 02 Análisis Estadístico I/Ejercicios")
library(readr)
sargos = read.table(file = "sargos.csv", sep = ";", dec = ",",header = TRUE)
sargos
attach(sargos)
str(sargos)##(str:acronimo de estructura)
isla  ##isla es un factor; ello significa que si pedimos a R
unclass(isla)##la funcion unclass() vemos que internamente los valores de esta variable
fptdo = factor(ptdo, levels = c(0, 1), labels = c("No Parasitado","Parasitado"))
fptdo
ptdo = factor(ptdo, levels = c(0, 1), labels = c("No Parasitado","Parasitado"))
unique(ptdo)
rm(ptdo)
unique(ptdo)
table(isla)
prop.table(table(isla))
table(larvas)
prop.table(table(larvas))
cumsum(table(larvas))####Para las frecuencias acumuladas utilizamos la
cumsum(prop.table(table(larvas)))
####Podemos construir una tabla mas compacta para estas frecuencias del siguiente
####modo:
tbl = table(larvas)
nlarvas = names(tbl)
fi = as.vector(tbl)
fri = as.vector(prop.table(tbl))
Fi = cumsum(fi)
Fri = cumsum(fri)
data.frame(nlarvas, fi, fri, Fi, Fri)
####Sugerencia: Si necesitaramos hacer frecuentemente tablas como esta, resulta conveniente
####definir una funcion en R para ello, que nos ahorre tener que escribir todas estas lineas cada
####vez. Esta funcion podria ser, por ejemplo:
tablaFrec = function(x) {
tbl = table(x)
categ = names(tbl)
fi = as.vector(tbl)
fri = as.vector(prop.table(tbl))
Fi = cumsum(fi)
Fri = cumsum(fri)
tabla = data.frame(categ, fi, fri, Fi, Fri)
names(tabla)[1] = deparse(substitute(x))
return(tabla)
}
tablaFrec(larvas)
barplot(table(isla))
pie(table(isla))
barplot(prop.table(table(isla)))
isla = factor(isla, levels = c("HI", "LP", "LG", "TF",
"GC", "FV", "LZ"), ordered = TRUE)
par(cex.axis = 0.9, las = 1)
barplot(prop.table(table(isla)), main = "Ejemplares capturados por isla",
names.arg = c("Hierro", "La\nPalma", "La \nGomera",
"Tenerife", "Gran \nCanaria", "Fuerte-\nventura",
"Lanza-\nrote"), col = terrain.colors(12))
noms = c("Hierro", "La Palma", "La Gomera", "Tenerife",
"Gran Canaria", "Fuerteventura", "Lanzarote")
pct = prop.table(table(isla)) * 100
etiquetas = paste(noms, " (", pct, "%)", sep = "")
pie(table(isla), col = terrain.colors(7), labels = etiquetas,
main = "Captura por isla")
table(fptdo, isla)
addmargins(table(fptdo, isla))
prop.table(table(fptdo, isla))
###Frecuencias relativas por filas: basta anadir a la funcion prop.table()
el argumento margin=1. Aqui ademas redondeamos a tres decimales:
round(prop.table(table(fptdo, isla), margin = 1), 3)
round(prop.table(table(fptdo, isla), margin = 1), 3)
round(prop.table(table(fptdo, isla), margin = 2), 3)
barplot(prop.table(table(sexo, isla)), col = c("pink2",
"cyan3"), beside = TRUE, legend.text = TRUE, names.arg = c("Hierro",
"La\nPalma", "La \nGomera", "Tenerife", "Gran \nCanaria",
"Fuerteven-\ntura", "Lanza-\nrote"), las = 2)
install.packages("agricolae")
library(agricolae)
table.freq(hist(long, plot = F))
hist(long, xlab = "longitud", ylab = "Frecuencia", freq = FALSE,
main = "Longitudes observadas en la muestra", col = topo.colors(40))
quantile(long, probs = c(0.05, 0.25, 0.5, 0.75, 0.9,0.95))
####Medidas de tendencia central.
median(long)
moda = function(x) {
tbl = table(x)
m = which(tbl == max(tbl))
return(names(m))
}
moda(isla)
intModal = function(x) {
tbl = hist(x, plot = FALSE)
m = which(tbl$counts == max(tbl$counts))
im = data.frame(tbl$breaks[m], tbl$breaks[m + 1])
names(im) = c("Inf", "Sup")
return(im)}
intModal(long)
var(long)
sd(long)
sd(long)/mean(long)
sd(peso)/mean(peso)
range(long)
diff(range(long))
quantile(long, probs = c(0.25, 0.75), names = FALSE)
diff(quantile(long, probs = c(0.25, 0.75), names = FALSE))
###Medidas de forma.
install.packages("agricolae")
install.packages("agricolae")
library(agricolae)
skewness(ldors)
skewness(phig)
####Coeficiente de apuntamiento (curtosis):
kurtosis(ldors)
kurtosis(phig)
####Diagrama de cajas y barras (boxplot)
boxplot(long, col = "orange", main = "longitud")
by(long, sexo, mean)
####o de manera equivalente:
aggregate(long, by = list(sexo), mean)
aggregate(subset(sargos, select = c(long, peso)), by = list(Sexo = sexo,
Isla = isla), mean)
boxplot(peso ~ sexo, main = "Peso", col = c("pink2",
"cyan3"))
boxplot(peso ~ isla, main = "Peso", col = heat.colors(14))
lm(peso ~ long)
####El valor indicado como intercept es la ordenada en el origen b0,
plot(long, ldors, xlab = "Longitud total", ylab = "Distancia morro-aleta dorsal",
main = "Regresion Longitud-Distancia a la aleta dorsal")
recta = lm(ldors ~ long)
abline(recta, col = "darkgreen", lwd = 2)
plot(long, ldors, xlab = "Longitud total", ylab = "Distancia morro-aleta dorsal",
main = "Regresion Longitud-Distancia a la aleta dorsal",
type = "n")
with(subset(sargos, sexo == "Hembra"), {
points(long, ldors, col = "pink3", pch = 19)
abline(lm(ldors ~ long), col = "pink3", lwd = 2)
})
with(subset(sargos, sexo == "Macho"), {
points(long, ldors, col = "cyan4", pch = 19)
abline(lm(ldors ~ long), col = "cyan4", lwd = 2)
})
legend("topleft", c("Hembra", "Macho"), col = c("pink3",
"cyan4"), pch = 19, lty = 2, bty = "n")
lm(ldors ~ long, data = subset(sargos, sexo == "Hembra"))
lm(ldors ~ long, data = subset(sargos, sexo == "Macho"))
intModal = function(x) {
tbl = hist(x, plot = FALSE)
m = which(tbl$counts == max(tbl$counts))
im = data.frame(tbl$breaks[m], tbl$breaks[m + 1])
names(im) = c("Inf", "Sup")
return(im)
}
cov(long, ldors)
cor(long, ldors)
cov(data.frame(long, ldors, lpect, peso))
cor(data.frame(long, ldors, lpect, peso))
by(data.frame(long, peso), sexo, cor)
