print ("Mati")
x<-4
setwd("C:/Users/wilde/Desktop/MCD/I. 02 Análisis Estadístico I/Ejercicios")
cavendish
cavendish<- read.table("Cavendish.txt", header=TRUE)
cavendish
summary(cavendish)
install.packages("RODBC")
library(RODBC)
venta=odbcConnectExcel(file.choose())
misdatos=sqlFetch(venta,'Sheet1')
odbcClose()
misdatos
library(RODBC)
venta=odbcConnectExcel(file.choose())
venta=odbcConnectExcel2007(file.choose())
venta=odbcConnectExcel2007(file.choose())
#venta=odbcConnectExcel(file.choose())
misdatos=sqlFetch(venta,'Sheet1')
odbcClose()
misdatos
View(misdatos)
View(misdatos)
iris
data(iris)
str(iris)
hist(iris$Sepal.Length)
install.packages("ggplot2")
library(ggplot2)
ggplot(iris,aes(x=Sepal.Lenght, fill=Species))+geom_histogram()
ggplot(iris,aes(x=Sepal.Length, fill=Species))+geom_histogram()
hist(iris$Sepal.Length)
hist(iris$Petal.Length)
ggplot(iris,aes(x=Sepal.Length))+geom_histogram()
ggplot(iris,aes(x=Sepal.Length, fill=Species))+geom_histogram()
ggplot(iris,aes(x=Sepal.Length))+geom_histogram()
ggplot(iris,aes(x=Sepal.Length, fill=Species))+geom_histogram()
diamonds
str(diamonds
)
str(diamonds)
ggplot(diamonds$)
ggplot(diamonds)
ggplot(diamonds, aes(x=carat))
ggplot(diamonds, aes(x=carat, y=price))
ggplot(diamonds, aes(x=carat,color=cut))
ggplot(diamonds, aes(x=carat,color="steelblue"))
diamonds
str(diamonds)
ggplot(diamonds)
ggplot(diamonds, aes(x=carat))
ggplot(diamonds, aes(x=carat, y=price))
ggplot(diamonds, aes(x=carat,color=cut))
ggplot(diamonds, aes(x=carat,color="steelblue"))
ggplot(diamonds, aes(x=carat,y=price,color="steelblue"))
ggplot(diamonds, aes(x=carat,y=price,color="steelblue"))+geom_point()+geom_smooth()
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_point()+geom_smooth()
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_smooth(x=carat,y=price)
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_smooth(aes(x=carat,y=price)
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_smooth(aes(x=carat,y=price))
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_point()+geom_smooth()
ggplot(diamonds, aes(x=carat,y=price,color=cut,color="steelblue"))+geom_smooth(aes(x=carat,y=price))
#Ejemplo () sin añadir ningun grafico
diamonds
str (diamonds)
ggplot(diamonds)#(solo introducimos referencia de los datos)
ggplot(diamonds, aes(x=carat))  #solo inicamos el eje X
ggplot(diamonds, aes(x=carat, y=price))#Especificamos ambos ejes X e Y,
#que ahora serán fijos en todas las capas.
ggplot(diamonds, aes(x=carat, color=cut))#Cada categoría de la variable
# “cut” tendrá un color diferente,
#una vez le indiquemos la geometría.
ggplot(diamonds, aes(x=carat), color="steelblue")#Si desea tener el color,
#el tamaño, etc, fijo (es decir,
#no varía basándose en una variable del marco de
#datos), es necesario especificarlo fuera de los aes(),
#como en este caso.
###las Capas(geom)(ver pag 8)
ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth()
ggplot(diamonds) +
geom_point(aes(x=carat, y=price, color=cut)) +
geom_smooth(aes(x=carat, y=price, color=cut))
ggplot(diamonds) +
geom_point(aes(x=carat, y=price, color=cut)) +
geom_smooth(aes(x=carat, y=price))
## o mas sencilo
ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(aes(color=cut)) +
geom_smooth()
ggplot(diamonds, aes(x=carat, y=price, color=cut, shape=color)) +
geom_point()
gg <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
labs(title="Diagrama de puntos", x="Tamaño del diamante", y="Precio")
gg
gg1 <- gg +
theme(plot.title=element_text(size=30, face="bold"),
axis.text.x=element_text(size=15),
axis.text.y=element_text(size=15),
axis.title.x=element_text(size=20),
axis.title.y=element_text(size=20)) +
scale_color_discrete(name="Corte del diamante")
gg1 +
facet_wrap( ~ cut, ncol=3)
gg1 +
facet_wrap(color ~ cut)
gg1 +
facet_wrap(color ~ cut, scales="free")
gg1 +
facet_wrap(color ~ cut, scales="free")
p1 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="none") +
labs(title="legend.position='none'")
p1
#Leyenda arriba:
p2 <- ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
theme(legend.position="top") +
labs(title="legend.position='top'")
p2
#Leyenda dentro del gráfico:
ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
labs(title="legend.position='coords inside plot'") +
theme(legend.justification=c(1,0), legend.position=c(1,0))
#Leyenda dentro del gráfico:
ggplot(diamonds, aes(x=carat, y=price, color=cut)) +
geom_point() +
geom_smooth() +
labs(title="legend.position='coords inside plot'") +
theme(legend.justification=c(1,0), legend.position=c(1,0))
######   3 ##########
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black")
ggplot(diamonds,aes(x=price)) +
geom_histogram(fill="white",color="black",binwidth=1000)
ggplot(diamonds,aes(x=price)) +
geom_histogram(aes(y = (..count..)/sum(..count..)),
fill="white",
color="black",
binwidth=1000)
p <- ggplot(diamonds,aes(cut,price))
p +
geom_boxplot(aes(fill=cut))
p +
geom_boxplot(aes(fill=cut))+
geom_point()
p +
geom_boxplot(aes(fill=factor(color)))
p +
geom_boxplot(aes(fill=factor(color)),
outlier.colour = "red",
outlier.size = 1.5)
#Gráficos de barras
