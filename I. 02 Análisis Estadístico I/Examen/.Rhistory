lambda<-3.52
dpois(x=x, lambda=lambda)
x<-3
y<-7
sum(dpois(x:y, lambda=lambda))
ppois(y,lambda=lambda,lower.tail =TRUE)-ppois(x-1,lambda=lambda,lower.tail =TRUE)
lambda<-3.52
x<-4
dpois(x=x, lambda=lambda)
###  Pregunta 4
intervalos<-function(bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 90%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("limite inferior: ", lim.inf, "limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos(bd$`precio`)
###  Pregunta 4
intervalos<-function(bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 90%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("limite inferior: ", lim.inf, "limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos(bd$`precio`)
###  Pregunta 4
intervalos<-function(bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("limite inferior: ", lim.inf, "limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos(bd$`precio`)
intervalos(bd$`ingreso`)
intervalos(bd$`autos`)
intervalos(bd$`ventas`)
###  Pregunta 4
intervalos<-function(bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", bd, "limite inferior: ", lim.inf, "limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos(bd$`precio`)
#Precio
intervalos("Precio",bd$`precio`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, "limite inferior: ", lim.inf, "limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
#Precio
intervalos("Precio",bd$`precio`)
media<-mean(bd)
ene<-length(bd)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
#Precio
intervalos("Precio",bd$`precio`)
#Ingreso
intervalos(bd$`ingreso`)
intervalos(bd$`autos`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
###  Pregunta 5
precio<-150
###  Pregunta 5
precio<-150
probZ<-pnorm(precio,media,desv,lower.tail = FALSE)
desv<-sd(bd)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
###  Pregunta 5
precio<-150
probZ<-pnorm(precio,media,desv,lower.tail = FALSE)
###  Pregunta 5
precio<-150
media<-mean(bd$precio)
desv<-sd(bd$precio)
probZ<-pnorm(precio,media,desv,lower.tail = FALSE)
probMayor<-2*probZ
probMayor
probZ<-pnorm(precio,media,desv,lower.tail = TRUE)
probMayor<-2*probZ
probMayor
probZ<-pnorm(precio,media,desv,lower.tail = FALSE)
probMayor<-2*probZ
probMayor
precio<-150
media<-mean(bd$precio)
desv<-sd(bd$precio)
probZ<-pnorm(precio,media,desv,lower.tail = FALSE)
probMayor<-2*probZ
probMayor
ingreso<-160
media<-mean(bd$ingreso)
desv<-sd(bd$ingreso)
probZ<-pnorm(ingreso,media,desv,lower.tail = FALSE)
prob<-2*probZ
prob
biseccion = function(f, xa, xb, tol){
if( sign(f(xa)) == sign(f(xb)) ){ stop("f(xa) y f(xb) tienen el mismo signo") }
# a = min(xa,xb)
# b = max(xa,xb)
a = xa; b = xb
k = 0
#Par imprimir estado
cat("----------------------------------------------------------\n")
cat(formatC( c("a","b","m","Error est."), width = -15, format = "f", flag = " "), "\n")
cat("----------------------------------------------------------\n")
repeat{
m = a + 0.5*(b-a)
if( f(m)==0 ){ cat("Cero de f en [",xa,",",xb,"] es: ", m ) }
if( sign(f(a)) != sign(f(m)) ){
b = m
} else { a = m }
dx = (b-a)/2
# imprimir estado
cat(formatC( c(a,b,m,dx), digits=7, width = -15, format = "f", flag = " "), "\n")
k = k+1
#until
if( dx < tol ){
cat("----------------------------------------------------------\n\n")
cat("Cero de f en [",xa,",",xb,"] es approx: ", m, "con error <=", dx)
break;
}
} #repeat
}
## Pruebas
f = function(x) x-cos(x)
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
biseccion(f, 0.5, 0.8, 0.000001)
biseccion = function(f, xa, xb, tol){
if( sign(f(xa)) == sign(f(xb)) ){ stop("f(xa) y f(xb) tienen el mismo signo") }
a = xa; b = xb
k = 0
cat("----------------------------------------------------------\n")
cat(formatC( c("a","b","m","Error est."), width = -15, format = "f", flag = " "), "\n")
cat("----------------------------------------------------------\n")
repeat{
m = a + 0.5*(b-a)
if( f(m)==0 ){ cat("Cero de f en [",xa,",",xb,"] es: ", m ) }
if( sign(f(a)) != sign(f(m)) ){
b = m
} else { a = m }
dx = (b-a)/2
# imprimir estado
cat(formatC( c(a,b,m,dx), digits=7, width = -15, format = "f", flag = " "), "\n")
k = k+1
#until
if( dx < tol ){
cat("----------------------------------------------------------\n\n")
cat("Cero de f en [",xa,",",xb,"] es approx: ", m, "con error <=", dx)
break;
}
} #repeat
}
## Pruebas
f = function(x) x^2-Cos(x)-1
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
## Pruebas
f = function(x) x^2-cos(x)-1
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
biseccion(f, 1, 2, 0.000001)
## Pruebas
f = function(x) x^2-cos(x)-1
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
biseccion(f, 1, 2, 1.5)
#biseccion(f, 1, 2, 1.5)
biseccion(f, 1, 2, 0.000001)
biseccion = function(f, xa, xb, tol){
if( sign(f(xa)) == sign(f(xb)) ){ stop("f(xa) y f(xb) tienen el mismo signo") }
a = xa; b = xb
k = 0
cat("----------------------------------------------------------\n")
cat(formatC( c("a","b","m","Error est."), width = -15, format = "f", flag = " "), "\n")
cat("----------------------------------------------------------\n")
repeat{
m = a + 0.5*(b-a)
if( f(m)==0 ){ cat("Cero de f en [",xa,",",xb,"] es: ", m ) }
if( sign(f(a)) != sign(f(m)) ){
b = m
} else { a = m }
dx = (b-a)/2
# imprimir estado
cat(formatC( c(a,b,m,dx), digits=7, width = -15, format = "f", flag = " "), "\n")
k = k+1
#until
if( dx < tol ){
cat("----------------------------------------------------------\n\n")
cat("Cero de f en [",xa,",",xb,"] es approx: ", m, "con error <=", dx)
break;
}
} #repeat
}
## Pruebas
f = function(x) x^2-cos(x)-1
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
#biseccion(f, 1, 2, 1.5)
biseccion(f, 1, 2, 0.000001)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
###  Pregunta 5
#a)
precio<-150
intervalos("Precio",bd$`precio`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
pnorm(media, desv,lower.tail = TRUE)
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
pnorm(media, desv,lower.tail = TRUE)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
#prob <-pnorm(media, desv,lower.tail = TRUE)
#prob
}
intervalos("Precio",bd$`precio`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
#prob <-pnorm(media, desv,lower.tail = TRUE)
#prob
}
intervalos("Precio",bd$`precio`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
#prob <-pnorm(media, desv,lower.tail = TRUE)
#prob
}
intervalos("Precio",bd$`precio`)
biseccion = function(f, xa, xb, tol){
if( sign(f(xa)) == sign(f(xb)) ){ stop("f(xa) y f(xb) tienen el mismo signo") }
a = xa; b = xb
k = 0
cat("----------------------------------------------------------\n")
cat(formatC( c("a","b","m","Error est."), width = -15, format = "f", flag = " "), "\n")
cat("----------------------------------------------------------\n")
repeat{
m = a + 0.5*(b-a)
if( f(m)==0 ){ cat("Cero de f en [",xa,",",xb,"] es: ", m ) }
if( sign(f(a)) != sign(f(m)) ){
b = m
} else { a = m }
dx = (b-a)/2
# imprimir estado
cat(formatC( c(a,b,m,dx), digits=7, width = -15, format = "f", flag = " "), "\n")
k = k+1
#until
if( dx < tol ){
cat("----------------------------------------------------------\n\n")
cat("Cero de f en [",xa,",",xb,"] es approx: ", m, "con error <=", dx)
break;
}
} #repeat
}
## Pruebas
f = function(x) x^2-cos(x)-1
curve(f, -2,2); abline(h=0, v=0) #gr?fico para decidir un intervalo
biseccion(f, 1, 2, 0.000001)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media,media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
#zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
prob <-pnorm(media,media, desv,lower.tail = TRUE)
prob
}
intervalos("Precio",bd$`precio`)
intervalos("Ingreso",bd$`ingreso`)
intervalos("Autos",bd$`autos`)
intervalos("Ventas",bd$`ventas`)
###  Pregunta 4
intervalos<-function(nombre,bd,ene,media,desv){
media<-mean(bd)
ene<-length(bd)
desv<-sd(bd)
error.est <- desv/sqrt(ene) # error estándar
margen.error <- 2.576 * error.est # nivel de confianza de 99%
lim.inf <- media - margen.error # Límite inferior del intervalo
lim.sup <- media + margen.error # Límite superior del intervalo
cat("Variable: ", nombre, ", limite inferior: ", lim.inf, ", limite superior: ",lim.sup)
#metodo alternativo
zsum.test(mean.x=media,sigma.x=desv, n.x=ene,conf.level=0.99)
#prob <-pnorm(media,media, desv,lower.tail = TRUE)
#prob
}
intervalos("Precio",bd$`precio`)
pnorm(media, desv,lower.tail = TRUE)
