summary(iris)
head(iris,1)
summary(iris)
str(iris)
str(vuelos)
vuelos$genero <- as.factor(vuelos$genero)
vuelos$satisfaccion <- as.factor(vuelos$satisfaccion)
str(vuelos)
library(party)
set.seed(1234)
ind<-sample(2,nrow(vuelos), replace=T,prob=c(0.7,0.3))
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-vuelos~retraso+distancia+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
myFormula<-vuelos~retraso+distancia+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
vuelos[,2:6]
head(vuelos[,2:6])
head(vuelos[,1:7])
head(vuelos[,2:6])
head(vuelos[,2:7])
trainData<-vuelos[,2:7][ind==1,]
testDAta<-vuelos[,2:7][ind==2,]
myFormula<-vuelos~retraso+distancia+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
str(vuelos)
summary(vuelos)
summary(vuelos[,2:7])
myFormula<-vuelos~edad+distancia+comida+limpieza+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
myFormula<-vuelos~edad+distancia+comida+limpieza+retraso+satisfaccio
vuelos_ctree<-ctree(myFormula,data=trainData)
myFormula<-satisfaccion~edad+distancia+comida+limpieza+retraso+satisfaccio
vuelos_ctree<-ctree(myFormula,data=trainData)
myFormula<-satisfaccion~edad+distancia+comida+limpieza+retraso+satisfaccion
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-satisfaccion~edad+distancia+comida+limpieza+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-satisfaccion~edad+distancia+comida+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-satisfaccion~edad+comida+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-satisfaccion~edad+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
#trainData<-vuelos[,2:7][ind==1,]
#testDAta<-vuelos[,2:7][ind==2,]
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-satisfaccion~edad+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-edad~satisfaccion+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$edad)
plot(vuelos_ctree)
myFormula<-edad~satisfaccion+limpieza+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$edad)
plot(vuelos_ctree)
myFormula<-genero~satisfaccion+limpieza+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
summary(vuelos)
myFormula<-genero~satisfaccion+retraso+distancia
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~satisfaccion+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-satisfaccion~genero+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$satisfaccion)
plot(vuelos_ctree)
myFormula<-genero~retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~edad+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~edad+distancia+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~edad+distancia+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~edad+distancia+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~distancia+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~distancia+retraso+comida+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-genero~distancia+retraso+comida
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
summary(vuelos)
myFormula<-genero~distancia+retraso+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$genero)
plot(vuelos_ctree)
myFormula<-edad~distancia+retraso+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$edad)
plot(vuelos_ctree)
myFormula<-edad~retraso+comida+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$edad)
plot(vuelos_ctree)
myFormula<-edad~retraso+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$edad)
plot(vuelos_ctree)
myFormula<-comida~retraso+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~distancia+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+limpieza
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+limpieza+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
summary(vuelos)
myFormula<-limpieza~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$limpieza)
plot(vuelos_ctree)
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
cliente=read.csv("https://raw.githubusercontent.com/VictorGuevaraP/Mineria-de-datos-2019-2/master/clientes.csv", sep = ";")
str(cliente)
missing(cliente)
#Con este codigo podemos observar si existen datos perdidos dentro de la data siendo false el resultado lo que nos da ah entender que no existen missing
cliente_cor=cliente[c(2:7,9)]
library(corrplot)
cor(cliente_cor)
#Se puede ver la correlacion de cada una de las variables seleccionadas.
corrplot(cor(cliente_cor))
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
library(psych)
install.packages("psych")
library(psych)
#Con estas librerias se busca observar la correlacion entre las variables mediante graficos.
cortest(cor(cliente_cor))
#PRUEBA DE ESFERICIDAD DE BARLETT
#Utilizando la libreria
install.packages("rela")
library(rela)
cortest.bartlett(cor(cliente_cor),n=850)
#Prueba KMO
KMO(cliente_cor)
scree(cliente_cor)
#Analisis paralelo
fa.parallel(cliente_cor,fa="pc")
componentes_clientes<-prcomp(cliente_cor, scale=TRUE,center = TRUE)
componentes_clientes
summary(componentes_clientes)
plot(componentes_clientes)
biplot(componentes_clientes, scale=0.5)
componentes_principal<-componentes_clientes$x
componentes_principal<-componentes_principal[,1:3]
head(componentes_principal)
componentes_principal
cliente
install.packages("readxl")
install.packages("readxl")
library (readxl)
localidades<-read_excel("localidades.xlsx")
head(localidades)
str(localidades)
str(localidades)
missing(localidades)
library(corrplot)
cor(localidades)
localidades_cor=localidades[c(2:7,9)]
localidades_cor=localidades[c(2:6,9)]
localidades_cor=localidades[c(2:6,9)]
localidades_cor=localidades[c(2:6,1)]
library(corrplot)
cor(localidades_cor)
cliente=read.csv("https://raw.githubusercontent.com/VictorGuevaraP/Mineria-de-datos-2019-2/master/clientes.csv", sep = ";")
str(cliente)
cliente
missing(cliente)
#Con este codigo podemos observar si existen datos perdidos dentro de la data siendo false el resultado lo que nos da ah entender que no existen missing
cliente_cor=cliente[c(2:7,9)]
library(corrplot)
cliente=read.csv("https://raw.githubusercontent.com/VictorGuevaraP/Mineria-de-datos-2019-2/master/clientes.csv", sep = ";")
str(cliente)
cliente
missing(cliente)
#Con este codigo podemos observar si existen datos perdidos dentro de la data siendo false el resultado lo que nos da ah entender que no existen missing
cliente_cor=cliente[c(2:7,9)]
library(corrplot)
cor(cliente_cor)
str(cliente)
str(localidades)
localidades_cor=localidades[c(2:6)]
library(corrplot)
cor(localidades_cor)
localidades2=localidades[c(2:6)]
library(corrplot)
cor(localidades2)
#Se puede ver la correlacion de cada una de las variables seleccionadas.
corrplot(cor(localidades2))
corrplot(cor(localidades2))
install.packages("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
install.packages("psych")
install.packages("psych")
library(PerformanceAnalytics)
library(psych)
cortest(cor(cliente_cor))
cortest(cor(localidades2))
install.packages("rela")
library(rela)
cortest.bartlett(cor(cliente_cor),n=850)
#Prueba KMO
KMO(cliente_cor)
scree(cliente_cor)
cortest.bartlett(cor(localidades2),n=850)
#Prueba KMO
KMO(localidades2)
scree(localidades2)
#Analisis paralelo
fa.parallel(localidades2,fa="pc")
comp_localidades<-prcomp(localidades2, scale=TRUE,center = TRUE)
comp_localidades
summary(comp_localidades)
plot(comp_localidades)
biplot(comp_localidades, scale=0.5)
comp_principal<-comp_localidades$x
comp_principal<-comp_principal[,1:3]
head(comp_principal)
comp_principal
install.packages("factoextra")
library(factoextra)
comp_localidades<-prcomp(localidades2, scale=TRUE,center = TRUE)
comp_localidades
summary(comp_localidades)
plot(comp_localidades)
biplot(comp_localidades, scale=0.5)
pca <- prcomp(localidade, scale = TRUE)
pca <- prcomp(localidades, scale = TRUE)
pca <- prcomp(comp_localidades, scale = TRUE)
localidadesA <- localidades[, 1:5]
pca <- prcomp(localidadesA, scale = TRUE)
View(localidadesA)
View(localidadesA)
localidadesA <- localidades[,2:5]
pca <- prcomp(localidadesA, scale = TRUE)
fviz_eig(pca)
plot(comp_localidades)
fviz_eig(pca)
plot(comp_localidades)
fviz_pca_ind(pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
biplot(comp_localidades, scale=0.5)
fviz_pca_biplot(pca, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
biplot(comp_localidades, scale=0.5)
fviz_pca_biplot(pca, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
biplot(comp_localidades, scale=0.5)
biplot(comp_localidades, scale=0.5)
fviz_pca_biplot(pca, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
comp_principal
source("C:/Users/rserdan/Desktop/Maestreya/analisis estadistico II/ENVIO-2-7-2022(1)CLUSTER.R")
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
str(vuelos)
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
dim(vuelos)
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
str(vuelos)
dim(vuelos)
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
str(vuelos)
dim(vuelos)
vuelos<-read.csv("vuelos.csv",sep = ";")
head(vuelos)
summary(vuelos)
str(vuelos)
vuelos$edad <- as.numeric(vuelos$edad)
vuelos$distancia <- as.numeric(vuelos$distancia)
vuelos$comida <- as.numeric(vuelos$comida)
vuelos$limpieza <- as.numeric(vuelos$limpieza)
vuelos$retraso <- as.numeric(vuelos$retraso)
vuelos$genero <- as.factor(vuelos$genero)
vuelos$satisfaccion <- as.factor(vuelos$satisfaccion)
var(vuelos$edad)
var(vuelos$distancia)
var(vuelos$comida)
var(vuelos$limpieza)
var(vuelos$retraso)
hist(vuelos$distancia,main="Histograma de Distancia ")
plot(density(vuelos$distancia), main="Grafico de distancia")
table(vuelos$satisfaccion)
pie(table(vuelos$satisfaccion),col=rainbow(10))
hist(vuelos$edad,main="Histograma de Edad ")
hist(vuelos$distancia,main="Histograma de Distancia ")
hist(vuelos$comida,main="Histograma de Comida")
hist(vuelos$retraso,main="Histograma de Retraso ")
hist(vuelos$edad,main="Histograma de Edad ")
hist(vuelos$comida,main="Histograma de Comida")
hist(vuelos$edad,main="Histograma de Edad ")
hist(vuelos$distancia,main="Histograma de Distancia ")
hist(vuelos$comida,main="Histograma de Comida")
hist(vuelos$retraso,main="Histograma de Retraso ")
hist(vuelos$distancia,main="Histograma de Distancia ")
hist(vuelos$edad,main="Histograma de Edad ")
plot(density(vuelos$distancia), main="Grafico de distancia")
table(vuelos$satisfaccion)
pie(table(vuelos$satisfaccion),col=rainbow(10))
cov(vuelos[,2:6])
cor(vuelos[,2:6])
library(ggvis)
vuelos%>%ggvis(~distancia,~retraso,fill=~satisfaccion)%>%
layer_points()
head(vuelos[,2:7])
library(party)
library(ggvis)
vuelos%>%ggvis(~distancia,~retraso,fill=~satisfaccion)%>%
layer_points()
myFormula<-comida~retraso+distancia
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
edad
edad
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
vuelos%>%ggvis(~distancia,~retraso,fill=~satisfaccion)%>%
layer_points()
vuelos%>%ggvis(~edad,~retraso,fill=~satisfaccion)%>%
layer_points()
vuelos%>%ggvis(~distancia,~retraso,fill=~edad)%>%
layer_points()
vuelos%>%ggvis(~edad,~retraso,fill=~satisfaccion)%>%
layer_points()
vuelos%>%ggvis(~distancia,~retraso,fill=~comida)%>%
layer_points()
vuelos%>%ggvis(~comida,~retraso,fill=~edad)%>%
layer_points()
vuelos%>%ggvis(~distancia,~retraso,fill=~comida)%>%
layer_points()
vuelos%>%ggvis(~edad,~retraso,fill=~satisfaccion)%>%
layer_points()
vuelos%>%ggvis(~distancia,~retraso,fill=~comida)%>%
layer_points()
head(vuelos[,2:7])
head(vuelos[,2:7])
library(party)
set.seed(1234)
ind<-sample(2,nrow(vuelos), replace=T,prob=c(0.7,0.3))
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
head(vuelos[,2:7])
library(party)
set.seed(1234)
ind<-sample(2,nrow(vuelos), replace=T,prob=c(0.7,0.3))
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
install.packages("readxl")
install.packages("readxl")
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+retraso
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+distancia
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
head(vuelos[,2:7])
library(party)
set.seed(1234)
ind<-sample(2,nrow(vuelos), replace=T,prob=c(0.7,0.3))
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+distancia
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
vuelos<-read.csv("vuelostodo.csv",sep = ";")
head(vuelos)
summary(vuelos)
str(vuelos)
vuelos$edad <- as.numeric(vuelos$edad)
vuelos$distancia <- as.numeric(vuelos$distancia)
vuelos$comida <- as.numeric(vuelos$comida)
vuelos$limpieza <- as.numeric(vuelos$limpieza)
vuelos$retraso <- as.numeric(vuelos$retraso)
vuelos$genero <- as.factor(vuelos$genero)
vuelos$satisfaccion <- as.factor(vuelos$satisfaccion)
var(vuelos$edad)
var(vuelos$distancia)
var(vuelos$comida)
var(vuelos$limpieza)
var(vuelos$retraso)
hist(vuelos$edad,main="Histograma de Edad ")
hist(vuelos$distancia,main="Histograma de Distancia ")
hist(vuelos$comida,main="Histograma de Comida")
hist(vuelos$retraso,main="Histograma de Retraso ")
plot(density(vuelos$distancia), main="Grafico de distancia")
table(vuelos$satisfaccion)
pie(table(vuelos$satisfaccion),col=rainbow(10))
cov(vuelos[,2:6])
cor(vuelos[,2:6])
library(ggvis)
vuelos%>%ggvis(~edad,~retraso,fill=~satisfaccion)%>%
layer_points()
vuelos%>%ggvis(~distancia,~retraso,fill=~comida)%>%
layer_points()
head(vuelos[,2:7])
library(party)
set.seed(1234)
ind<-sample(2,nrow(vuelos), replace=T,prob=c(0.7,0.3))
trainData<-vuelos[ind==1,]
testDAta<-vuelos[ind==2,]
myFormula<-comida~retraso+distancia
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
myFormula<-comida~retraso+edad
vuelos_ctree<-ctree(myFormula,data=trainData)
table(predict(vuelos_ctree),trainData$comida)
plot(vuelos_ctree)
